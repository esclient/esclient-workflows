name: "lint and test java"

on:
  workflow_call:
    inputs:
      java-version:
        type: string
        required: false
        default: "17"
      java-distribution:
        type: string
        required: false
        default: "temurin"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java-version }}
          distribution: ${{ inputs.java-distribution }}

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Install build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y make
          
          GRPC_JAVA_VERSION="1.58.0"
          wget -O protoc-gen-grpc-java "https://repo1.maven.org/maven2/io/grpc/protoc-gen-grpc-java/${GRPC_JAVA_VERSION}/protoc-gen-grpc-java-${GRPC_JAVA_VERSION}-linux-x86_64.exe"
          chmod +x protoc-gen-grpc-java
          sudo mv protoc-gen-grpc-java /usr/local/bin/

      - name: Ensure Maven Wrapper exists and is executable
        run: |
          if [ ! -f "./mvnw" ] || [ ! -f "./.mvn/wrapper/maven-wrapper.properties" ]; then
            echo "Maven wrapper missing, generating..."
            mvn wrapper:wrapper
          fi
          chmod +x ./mvnw
          echo "MAVEN_CMD=./mvnw" >> $GITHUB_ENV

      - name: Install dependencies
        run: ${{ env.MAVEN_CMD }} dependency:resolve

      - name: Run static analysis (excluding generated files)
        run: |
          ${{ env.MAVEN_CMD }} spotless:check -Pquality
          ${{ env.MAVEN_CMD }} checkstyle:check -Pquality
          ${{ env.MAVEN_CMD }} pmd:check -Pquality -Dpmd.excludes="**/rating/Rating*.java,**/rating/*ServiceGrpc*.java"
          ${{ env.MAVEN_CMD }} spotbugs:check -Pquality

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java-version }}
          distribution: ${{ inputs.java-distribution }}

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Install build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y make protobuf-compiler

      - name: Ensure Maven Wrapper exists and is executable
        run: |
          if [ ! -f "./mvnw" ] || [ ! -f "./.mvn/wrapper/maven-wrapper.properties" ]; then
            echo "Maven wrapper missing, generating..."
            mvn wrapper:wrapper
          fi
          chmod +x ./mvnw
          echo "MAVEN_CMD=./mvnw" >> $GITHUB_ENV

      - name: Install dependencies
        run: ${{ env.MAVEN_CMD }} dependency:resolve

      - name: Run tests and generate coverage
        run: ${{ env.MAVEN_CMD }} test jacoco:report -Pquality

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          file: ./target/site/jacoco/jacoco.xml
          fail_ci_if_error: false
