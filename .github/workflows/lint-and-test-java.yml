name: "lint and test java"

on:
  workflow_call:
    inputs:
      java-version:
        type: string
        required: false
        default: "21"
      java-distribution:
        type: string
        required: false
        default: "temurin"
      source:
        type: string
        required: true
    secrets:
      SONAR_TOKEN:
        required: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java-version }}
          distribution: ${{ inputs.java-distribution }}

      - name: Set up Maven
        run: |
          sudo apt-get update
          sudo apt-get install -y maven

      - name: Install just
        uses: extractions/setup-just@v3

      - name: Run lint
        run: just lint

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java-version }}
          distribution: ${{ inputs.java-distribution }}

      - name: Set up Maven
        run: |
          sudo apt-get update
          sudo apt-get install -y maven

      - name: Install just
        uses: extractions/setup-just@v3

      - name: Run tests
        run: just test

      - name: Upload JaCoCo report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco/jacoco.xml
          if-no-files-found: error

      - name: Upload compiled classes
        uses: actions/upload-artifact@v4
        with:
          name: java-classes
          path: target/classes
          if-no-files-found: error

  sonarqube:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download JaCoCo report
        uses: actions/download-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco

      - name: Download compiled classes
        uses: actions/download-artifact@v4
        with:
          name: java-classes
          path: target/classes

      - name: Sonar scan
        uses: SonarSource/sonarqube-scan-action@v6.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=${{ vars.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ vars.SONAR_ORGANIZATION }}
            -Dsonar.java.binaries=target/classes
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
            -Dsonar.sources=.
            -Dsonar.exclusions=tests/**,api/**
            -Dsonar.tests=tests
            -Dsonar.coverage.exclusions=src/${{ inputs.source }}/Server.java,src/${{ inputs.source }}/Settings.java
            -Dsonar.sourceEncoding=UTF-8

      - name: Quality Gate
        uses: SonarSource/sonarqube-quality-gate-action@v1.2.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
