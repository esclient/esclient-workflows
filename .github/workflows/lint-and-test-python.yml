name: "lint and test python"

on:
  workflow_call:
    inputs:
      python-version:
        type: string
        required: true
    secrets:
      SONAR_TOKEN:
        required: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}

      - name: Set up PDM
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: ${{ inputs.python-version }}
          cache: true
          cache-dependency-path: pdm.lock

      - name: Install just
        uses: extractions/setup-just@v3

      - name: Cache PDM packages
        id: cache-pdm
        uses: actions/cache@v3
        with:
          path: __pypackages__
          key: ${{ runner.os }}-pdm-${{ hashFiles('pdm.lock') }}

      - name: Install dependencies
        if: steps.cache-pdm.outputs.cache-hit != 'true'
        run: pdm install --with dev

      - name: Run lint
        run: pdm run just lint

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}

      - name: Set up PDM
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: ${{ inputs.python-version }}
          cache: true
          cache-dependency-path: pdm.lock

      - name: Install just
        uses: extractions/setup-just@v3

      - name: Cache PDM packages
        id: cache-pdm-test
        uses: actions/cache@v3
        with:
          path: __pypackages__
          key: ${{ runner.os }}-pdm-${{ hashFiles('pdm.lock') }}

      - name: Install dependencies
        if: steps.cache-pdm-test.outputs.cache-hit != 'true'
        run: pdm install

      - name: Run tests
        run: pdm run just test

  sonarqube:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Scan
        uses: SonarSource/sonarqube-scan-action@v6.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=${{ vars.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ vars.SONAR_ORGANIZATION }}
            -Dsonar.python.version=${{ inputs.python-version }}

      - name: Quality Gate
        uses: SonarSource/sonarqube-quality-gate-action@v1.2.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
